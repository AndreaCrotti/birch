#!/usr/bin/env lumo
;; -*- mode: clojurescript -*-
;; vim: ft=clojure:
(require '[lumo.core :refer [*command-line-args*]]
         '[clojure.string :as str])

(def node-fs (js/require "fs"))
(def node-path (js/require "path"))

(def read-dir (.-readdirSync node-fs))
(def stat (.-statSync node-fs))
(def path-join (.-join node-path))

(defn directory? [f]
  (.isDirectory (stat f)))

(def I-branch "│   ")
(def T-branch "├── ")
(def L-branch "└── ")
(def SPACER   "    ")

(declare tree-entry)

(defn child-entries [path]
  (map #(tree-entry path %1) (read-dir path)))

(defn tree-entry [parent name]
  (let [path (path-join parent name)]
    {:name name
     :children (if (directory? path) (child-entries path))}))

(defn render-tree [{:keys [name children]}]
  (cons
   name
   (mapcat (fn [child]
             (let [[first & rest] (render-tree child)]
               (cons (str L-branch first)
                     (map #(str SPACER %) rest))))
           children)))

(defn birch [dir]
  (->> (tree-entry "" dir)
       render-tree
       (str/join "\n")
       print))

(birch (first *command-line-args*))
